/*
 * Copyright Telrock Communications Limited 2008 * 
 *
 * $Header:  $
 * $Revision:  $
 * $Date:  $ 
 */
package com.telrock.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;

@Entity
public class Department implements Comparable<Department> {
	// @formatter:off
	/*
	 * long id - primary key, autogenerated String name - department's name String
	 * area - what is the department's area. Some departments may be in the same
	 * area.
	 */
	// @formatter:on

	@Id
	@GeneratedValue
	private Long id;

	public Department() {
	}

	public Department(String name, String area) {
		this.name = name;
		this.area = area;
	}

	@Column
	private String name;

	@Column
	private String area;

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getArea() {
		return area;
	}

	public void setArea(String area) {
		this.area = area;
	}

	@Override
	public String toString() {
		return "Department [id=" + id + ", name=" + name + ", area=" + area + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((area == null) ? 0 : area.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return prime * result + ((name == null) ? 0 : name.hashCode());
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null || getClass() != obj.getClass()) {
			return false;
		}
		Department other = (Department) obj;
		if (area == null) {
			if (other.area != null) {
				return false;
			}
		} else if (!area.equals(other.area)) {
			return false;
		}
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		if (name == null) {
			if (other.name != null) {
				return false;
			}
		} else if (!name.equals(other.name)) {
			return false;
		}
		return true;
	}

	@Override
	public int compareTo(Department department) {
		int i = id.compareTo(department.id);
		if (i != 0) {
			return i;
		}
		i = name.compareTo(department.name);
		if (i != 0) {
			return i;
		}
		i = area.compareTo(department.area);
		if (i != 0) {
			return i;
		}
		return 0;
	}
}
